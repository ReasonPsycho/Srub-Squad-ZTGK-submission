#version 430

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;


struct ParticleData
{
    int data[4];  // 0 lifeTime , 1 time to live, 2 gravity (*100), 3 texture
    vec4 position;
    vec4 rotation;
    vec4 scale;
    vec4 velocity;
    vec4 angularVelocity;
};

layout (std430, binding = 10) buffer AsteroidBuffer {
    ParticleData particleData[]; // Array of velocities
};

uniform float deltaTime;

void main() {
    uint index = gl_WorkGroupID.x;

    // Perform operations on particles based on index
    particleData[index].position.w += deltaTime;
    particleData[index].position.xyz += ((particleData[index].velocity.xyz - vec3(0,particleData[index].scale.w,0)) * vec3(deltaTime));
    particleData[index].rotation.xyz += (particleData[index].angularVelocity.xyz* vec3(deltaTime));
}